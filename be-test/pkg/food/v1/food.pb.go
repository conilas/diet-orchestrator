// Code generated by protoc-gen-go. DO NOT EDIT.
// source: food.proto

package food

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Order_Status int32

const (
	Order_UNKNOWN     Order_Status = 0
	Order_NEW         Order_Status = 1
	Order_PREPARATION Order_Status = 2
	Order_IN_FLIGHT   Order_Status = 3
	Order_DELIVERED   Order_Status = 4
	Order_REJECTED    Order_Status = 5
	Order_CANCELLED   Order_Status = 6
)

var Order_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "NEW",
	2: "PREPARATION",
	3: "IN_FLIGHT",
	4: "DELIVERED",
	5: "REJECTED",
	6: "CANCELLED",
}

var Order_Status_value = map[string]int32{
	"UNKNOWN":     0,
	"NEW":         1,
	"PREPARATION": 2,
	"IN_FLIGHT":   3,
	"DELIVERED":   4,
	"REJECTED":    5,
	"CANCELLED":   6,
}

func (x Order_Status) String() string {
	return proto.EnumName(Order_Status_name, int32(x))
}

func (Order_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{0, 0}
}

type KitchenOrder_Status int32

const (
	KitchenOrder_UNKNOWN     KitchenOrder_Status = 0
	KitchenOrder_NEW         KitchenOrder_Status = 1
	KitchenOrder_PREPARATION KitchenOrder_Status = 2
	KitchenOrder_PACKAGED    KitchenOrder_Status = 3
)

var KitchenOrder_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "NEW",
	2: "PREPARATION",
	3: "PACKAGED",
}

var KitchenOrder_Status_value = map[string]int32{
	"UNKNOWN":     0,
	"NEW":         1,
	"PREPARATION": 2,
	"PACKAGED":    3,
}

func (x KitchenOrder_Status) String() string {
	return proto.EnumName(KitchenOrder_Status_name, int32(x))
}

func (KitchenOrder_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{6, 0}
}

type Shipment_Status int32

const (
	Shipment_UNKNOWN   Shipment_Status = 0
	Shipment_NEW       Shipment_Status = 1
	Shipment_COLLECTED Shipment_Status = 2
	Shipment_DELIVERED Shipment_Status = 3
	Shipment_REJECTED  Shipment_Status = 4
)

var Shipment_Status_name = map[int32]string{
	0: "UNKNOWN",
	1: "NEW",
	2: "COLLECTED",
	3: "DELIVERED",
	4: "REJECTED",
}

var Shipment_Status_value = map[string]int32{
	"UNKNOWN":   0,
	"NEW":       1,
	"COLLECTED": 2,
	"DELIVERED": 3,
	"REJECTED":  4,
}

func (x Shipment_Status) String() string {
	return proto.EnumName(Shipment_Status_name, int32(x))
}

func (Shipment_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{9, 0}
}

// Order represents a food delivery order.
type Order struct {
	// Output only. Resource name of the order, assigned by the server.
	// For example: "orders/83e00bfa-b99c-434e-81d8-43d7c66eabb5".
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. Create timestamp in RFC3339 text format.
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. Update timestamp in RFC3339 text format.
	UpdateTime string `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Output only. Customer ID who placed this order.
	CustomerId string `protobuf:"bytes,4,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// Most recently observed status of the food order, populated by the scheduler.
	Status               Order_Status `protobuf:"varint,5,opt,name=status,proto3,enum=food.v1.Order_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{0}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Order) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Order) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Order) GetCustomerId() string {
	if m != nil {
		return m.CustomerId
	}
	return ""
}

func (m *Order) GetStatus() Order_Status {
	if m != nil {
		return m.Status
	}
	return Order_UNKNOWN
}

// Request message for CreateOrder method.
type CreateOrderRequest struct {
	// The order resource to create.
	Order                *Order   `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateOrderRequest) Reset()         { *m = CreateOrderRequest{} }
func (m *CreateOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CreateOrderRequest) ProtoMessage()    {}
func (*CreateOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{1}
}

func (m *CreateOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateOrderRequest.Unmarshal(m, b)
}
func (m *CreateOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateOrderRequest.Marshal(b, m, deterministic)
}
func (m *CreateOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateOrderRequest.Merge(m, src)
}
func (m *CreateOrderRequest) XXX_Size() int {
	return xxx_messageInfo_CreateOrderRequest.Size(m)
}
func (m *CreateOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateOrderRequest proto.InternalMessageInfo

func (m *CreateOrderRequest) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

// Request message for GetOrder method.
type GetOrderRequest struct {
	// Resource name of the order.
	// For example: "orders/83e00bfa-b99c-434e-81d8-43d7c66eabb5".
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetOrderRequest) Reset()         { *m = GetOrderRequest{} }
func (m *GetOrderRequest) String() string { return proto.CompactTextString(m) }
func (*GetOrderRequest) ProtoMessage()    {}
func (*GetOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{2}
}

func (m *GetOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetOrderRequest.Unmarshal(m, b)
}
func (m *GetOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetOrderRequest.Marshal(b, m, deterministic)
}
func (m *GetOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetOrderRequest.Merge(m, src)
}
func (m *GetOrderRequest) XXX_Size() int {
	return xxx_messageInfo_GetOrderRequest.Size(m)
}
func (m *GetOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetOrderRequest proto.InternalMessageInfo

func (m *GetOrderRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request message for ListOrders method.
type ListOrdersRequest struct {
	// The order status filter expression.
	StatusFilter Order_Status `protobuf:"varint,1,opt,name=status_filter,json=statusFilter,proto3,enum=food.v1.Order_Status" json:"status_filter,omitempty"`
	// The maximum number of items to return.
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The nextPageToken value returned from a previous List request, if any.
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrdersRequest) Reset()         { *m = ListOrdersRequest{} }
func (m *ListOrdersRequest) String() string { return proto.CompactTextString(m) }
func (*ListOrdersRequest) ProtoMessage()    {}
func (*ListOrdersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{3}
}

func (m *ListOrdersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrdersRequest.Unmarshal(m, b)
}
func (m *ListOrdersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrdersRequest.Marshal(b, m, deterministic)
}
func (m *ListOrdersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrdersRequest.Merge(m, src)
}
func (m *ListOrdersRequest) XXX_Size() int {
	return xxx_messageInfo_ListOrdersRequest.Size(m)
}
func (m *ListOrdersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrdersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrdersRequest proto.InternalMessageInfo

func (m *ListOrdersRequest) GetStatusFilter() Order_Status {
	if m != nil {
		return m.StatusFilter
	}
	return Order_UNKNOWN
}

func (m *ListOrdersRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListOrdersRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response message for ListOrders method.
type ListOrdersResponse struct {
	// A list of orders.
	Orders []*Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	// Token to retrieve the next page of results, or empty if there are no
	// more results in the list.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListOrdersResponse) Reset()         { *m = ListOrdersResponse{} }
func (m *ListOrdersResponse) String() string { return proto.CompactTextString(m) }
func (*ListOrdersResponse) ProtoMessage()    {}
func (*ListOrdersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{4}
}

func (m *ListOrdersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListOrdersResponse.Unmarshal(m, b)
}
func (m *ListOrdersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListOrdersResponse.Marshal(b, m, deterministic)
}
func (m *ListOrdersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListOrdersResponse.Merge(m, src)
}
func (m *ListOrdersResponse) XXX_Size() int {
	return xxx_messageInfo_ListOrdersResponse.Size(m)
}
func (m *ListOrdersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListOrdersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListOrdersResponse proto.InternalMessageInfo

func (m *ListOrdersResponse) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

func (m *ListOrdersResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request message for UpdateOrder method.
type UpdateOrderRequest struct {
	// The order resource which updates the resource on the server.
	Order *Order `protobuf:"bytes,1,opt,name=order,proto3" json:"order,omitempty"`
	// Only updates the `order` fields indicated by this mask.
	// The field mask must not be empty, and it must not contain fields that are
	// immutable or only set by the server.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateOrderRequest) Reset()         { *m = UpdateOrderRequest{} }
func (m *UpdateOrderRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOrderRequest) ProtoMessage()    {}
func (*UpdateOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{5}
}

func (m *UpdateOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOrderRequest.Unmarshal(m, b)
}
func (m *UpdateOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOrderRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOrderRequest.Merge(m, src)
}
func (m *UpdateOrderRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOrderRequest.Size(m)
}
func (m *UpdateOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOrderRequest proto.InternalMessageInfo

func (m *UpdateOrderRequest) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *UpdateOrderRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// KitchenOrder represents kitchen order to prepare the meal.
type KitchenOrder struct {
	// Output only. Resource name of the order, assigned by the server.
	// For example: "kitchenorders/83e00bfa-b99c-434e-81d8-43d7c66eabb5".
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. Create timestamp in RFC3339 text format.
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. Update timestamp in RFC3339 text format.
	UpdateTime string `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Output only. Most recently observed status of the kitchen order, populated by the system.
	Status               KitchenOrder_Status `protobuf:"varint,5,opt,name=status,proto3,enum=food.v1.KitchenOrder_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *KitchenOrder) Reset()         { *m = KitchenOrder{} }
func (m *KitchenOrder) String() string { return proto.CompactTextString(m) }
func (*KitchenOrder) ProtoMessage()    {}
func (*KitchenOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{6}
}

func (m *KitchenOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KitchenOrder.Unmarshal(m, b)
}
func (m *KitchenOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KitchenOrder.Marshal(b, m, deterministic)
}
func (m *KitchenOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KitchenOrder.Merge(m, src)
}
func (m *KitchenOrder) XXX_Size() int {
	return xxx_messageInfo_KitchenOrder.Size(m)
}
func (m *KitchenOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_KitchenOrder.DiscardUnknown(m)
}

var xxx_messageInfo_KitchenOrder proto.InternalMessageInfo

func (m *KitchenOrder) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *KitchenOrder) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *KitchenOrder) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *KitchenOrder) GetStatus() KitchenOrder_Status {
	if m != nil {
		return m.Status
	}
	return KitchenOrder_UNKNOWN
}

// Request message for CreateKitchenOrder method.
type CreateKitchenOrderRequest struct {
	// The kitchen order resource to create.
	Kitchenorder         *KitchenOrder `protobuf:"bytes,1,opt,name=kitchenorder,proto3" json:"kitchenorder,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CreateKitchenOrderRequest) Reset()         { *m = CreateKitchenOrderRequest{} }
func (m *CreateKitchenOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CreateKitchenOrderRequest) ProtoMessage()    {}
func (*CreateKitchenOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{7}
}

func (m *CreateKitchenOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateKitchenOrderRequest.Unmarshal(m, b)
}
func (m *CreateKitchenOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateKitchenOrderRequest.Marshal(b, m, deterministic)
}
func (m *CreateKitchenOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateKitchenOrderRequest.Merge(m, src)
}
func (m *CreateKitchenOrderRequest) XXX_Size() int {
	return xxx_messageInfo_CreateKitchenOrderRequest.Size(m)
}
func (m *CreateKitchenOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateKitchenOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateKitchenOrderRequest proto.InternalMessageInfo

func (m *CreateKitchenOrderRequest) GetKitchenorder() *KitchenOrder {
	if m != nil {
		return m.Kitchenorder
	}
	return nil
}

// Request message for GetKitchenOrder method.
type GetKitchenOrderRequest struct {
	// Resource name of the kitchen order.
	// For example: "kitchenorders/83e00bfa-b99c-434e-81d8-43d7c66eabb5".
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetKitchenOrderRequest) Reset()         { *m = GetKitchenOrderRequest{} }
func (m *GetKitchenOrderRequest) String() string { return proto.CompactTextString(m) }
func (*GetKitchenOrderRequest) ProtoMessage()    {}
func (*GetKitchenOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{8}
}

func (m *GetKitchenOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetKitchenOrderRequest.Unmarshal(m, b)
}
func (m *GetKitchenOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetKitchenOrderRequest.Marshal(b, m, deterministic)
}
func (m *GetKitchenOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetKitchenOrderRequest.Merge(m, src)
}
func (m *GetKitchenOrderRequest) XXX_Size() int {
	return xxx_messageInfo_GetKitchenOrderRequest.Size(m)
}
func (m *GetKitchenOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetKitchenOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetKitchenOrderRequest proto.InternalMessageInfo

func (m *GetKitchenOrderRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Shipment represents drone delivery shipment.
type Shipment struct {
	// Output only. Resource name of the order, assigned by the server.
	// For example: "shipments/83e00bfa-b99c-434e-81d8-43d7c66eabb5".
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. Create timestamp in RFC3339 text format.
	CreateTime string `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. Update timestamp in RFC3339 text format.
	UpdateTime string `protobuf:"bytes,3,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Output only. Most recently observed status of the kitchen order, populated by the system.
	Status               Shipment_Status `protobuf:"varint,5,opt,name=status,proto3,enum=food.v1.Shipment_Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Shipment) Reset()         { *m = Shipment{} }
func (m *Shipment) String() string { return proto.CompactTextString(m) }
func (*Shipment) ProtoMessage()    {}
func (*Shipment) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{9}
}

func (m *Shipment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Shipment.Unmarshal(m, b)
}
func (m *Shipment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Shipment.Marshal(b, m, deterministic)
}
func (m *Shipment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Shipment.Merge(m, src)
}
func (m *Shipment) XXX_Size() int {
	return xxx_messageInfo_Shipment.Size(m)
}
func (m *Shipment) XXX_DiscardUnknown() {
	xxx_messageInfo_Shipment.DiscardUnknown(m)
}

var xxx_messageInfo_Shipment proto.InternalMessageInfo

func (m *Shipment) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Shipment) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Shipment) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Shipment) GetStatus() Shipment_Status {
	if m != nil {
		return m.Status
	}
	return Shipment_UNKNOWN
}

// Request message for CreateShipment method.
type CreateShipmentRequest struct {
	// The shipment request resource to create.
	Shipment             *Shipment `protobuf:"bytes,1,opt,name=shipment,proto3" json:"shipment,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateShipmentRequest) Reset()         { *m = CreateShipmentRequest{} }
func (m *CreateShipmentRequest) String() string { return proto.CompactTextString(m) }
func (*CreateShipmentRequest) ProtoMessage()    {}
func (*CreateShipmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{10}
}

func (m *CreateShipmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateShipmentRequest.Unmarshal(m, b)
}
func (m *CreateShipmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateShipmentRequest.Marshal(b, m, deterministic)
}
func (m *CreateShipmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateShipmentRequest.Merge(m, src)
}
func (m *CreateShipmentRequest) XXX_Size() int {
	return xxx_messageInfo_CreateShipmentRequest.Size(m)
}
func (m *CreateShipmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateShipmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateShipmentRequest proto.InternalMessageInfo

func (m *CreateShipmentRequest) GetShipment() *Shipment {
	if m != nil {
		return m.Shipment
	}
	return nil
}

// Request message for GetShipment method.
type GetShipmentRequest struct {
	// Resource name of the shipment request.
	// For example: "shipments/83e00bfa-b99c-434e-81d8-43d7c66eabb5".
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetShipmentRequest) Reset()         { *m = GetShipmentRequest{} }
func (m *GetShipmentRequest) String() string { return proto.CompactTextString(m) }
func (*GetShipmentRequest) ProtoMessage()    {}
func (*GetShipmentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_99c7773ae8ad4a83, []int{11}
}

func (m *GetShipmentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetShipmentRequest.Unmarshal(m, b)
}
func (m *GetShipmentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetShipmentRequest.Marshal(b, m, deterministic)
}
func (m *GetShipmentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetShipmentRequest.Merge(m, src)
}
func (m *GetShipmentRequest) XXX_Size() int {
	return xxx_messageInfo_GetShipmentRequest.Size(m)
}
func (m *GetShipmentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetShipmentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetShipmentRequest proto.InternalMessageInfo

func (m *GetShipmentRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("food.v1.Order_Status", Order_Status_name, Order_Status_value)
	proto.RegisterEnum("food.v1.KitchenOrder_Status", KitchenOrder_Status_name, KitchenOrder_Status_value)
	proto.RegisterEnum("food.v1.Shipment_Status", Shipment_Status_name, Shipment_Status_value)
	proto.RegisterType((*Order)(nil), "food.v1.Order")
	proto.RegisterType((*CreateOrderRequest)(nil), "food.v1.CreateOrderRequest")
	proto.RegisterType((*GetOrderRequest)(nil), "food.v1.GetOrderRequest")
	proto.RegisterType((*ListOrdersRequest)(nil), "food.v1.ListOrdersRequest")
	proto.RegisterType((*ListOrdersResponse)(nil), "food.v1.ListOrdersResponse")
	proto.RegisterType((*UpdateOrderRequest)(nil), "food.v1.UpdateOrderRequest")
	proto.RegisterType((*KitchenOrder)(nil), "food.v1.KitchenOrder")
	proto.RegisterType((*CreateKitchenOrderRequest)(nil), "food.v1.CreateKitchenOrderRequest")
	proto.RegisterType((*GetKitchenOrderRequest)(nil), "food.v1.GetKitchenOrderRequest")
	proto.RegisterType((*Shipment)(nil), "food.v1.Shipment")
	proto.RegisterType((*CreateShipmentRequest)(nil), "food.v1.CreateShipmentRequest")
	proto.RegisterType((*GetShipmentRequest)(nil), "food.v1.GetShipmentRequest")
}

func init() { proto.RegisterFile("food.proto", fileDescriptor_99c7773ae8ad4a83) }

var fileDescriptor_99c7773ae8ad4a83 = []byte{
	// 943 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0x41, 0x4f, 0xe3, 0x56,
	0x10, 0xae, 0x13, 0x12, 0xc2, 0x24, 0x40, 0x98, 0x15, 0xab, 0x60, 0xe8, 0x42, 0x9f, 0xda, 0x2d,
	0x42, 0xc5, 0x5e, 0xd2, 0x5e, 0x9a, 0xd5, 0x1e, 0xd2, 0xc4, 0xa4, 0x59, 0xd2, 0x40, 0x4d, 0xd8,
	0x55, 0x2b, 0x55, 0x91, 0x89, 0x1f, 0xc1, 0x0d, 0xb1, 0xd3, 0xf8, 0x85, 0xae, 0xb6, 0xe2, 0xd2,
	0x6b, 0x8f, 0x3d, 0xf5, 0x77, 0xed, 0xa9, 0x97, 0x9e, 0xfa, 0x27, 0xf6, 0x56, 0xf9, 0x3d, 0xdb,
	0xb1, 0x1d, 0x57, 0x2b, 0x0e, 0x9c, 0x62, 0xcf, 0xfb, 0x32, 0xdf, 0xcc, 0xf7, 0xbe, 0x19, 0x03,
	0x5c, 0x39, 0x8e, 0xa9, 0x4c, 0xa6, 0x0e, 0x73, 0x70, 0x99, 0x3f, 0xdf, 0x1e, 0xc9, 0x3b, 0x43,
	0xc7, 0x19, 0xde, 0x50, 0xd5, 0x98, 0x58, 0xaa, 0x61, 0xdb, 0x0e, 0x33, 0x98, 0xe5, 0xd8, 0xae,
	0x80, 0xc9, 0x7b, 0xfe, 0x29, 0x7f, 0xbb, 0x9c, 0x5d, 0xa9, 0x57, 0x16, 0xbd, 0x31, 0xfb, 0x63,
	0xc3, 0x1d, 0x09, 0x04, 0xf9, 0x2b, 0x03, 0xb9, 0xd3, 0xa9, 0x49, 0xa7, 0x88, 0xb0, 0x64, 0x1b,
	0x63, 0x5a, 0x91, 0xf6, 0xa4, 0xfd, 0x15, 0x9d, 0x3f, 0xe3, 0x2e, 0x14, 0x07, 0x53, 0x6a, 0x30,
	0xda, 0x67, 0xd6, 0x98, 0x56, 0x32, 0xfc, 0x08, 0x44, 0xa8, 0x67, 0x09, 0xc0, 0x6c, 0x62, 0x86,
	0x80, 0xac, 0x00, 0x88, 0x50, 0x00, 0x18, 0xcc, 0x5c, 0xe6, 0x8c, 0xe9, 0xb4, 0x6f, 0x99, 0x95,
	0x25, 0x3f, 0x83, 0x1f, 0x6a, 0x9b, 0x78, 0x08, 0x79, 0x97, 0x19, 0x6c, 0xe6, 0x56, 0x72, 0x7b,
	0xd2, 0xfe, 0x5a, 0x75, 0x53, 0xf1, 0x5b, 0x53, 0x78, 0x59, 0xca, 0x39, 0x3f, 0xd4, 0x7d, 0x10,
	0xf9, 0x19, 0xf2, 0x22, 0x82, 0x45, 0x58, 0xbe, 0xe8, 0x9e, 0x74, 0x4f, 0x5f, 0x77, 0xcb, 0x1f,
	0xe1, 0x32, 0x64, 0xbb, 0xda, 0xeb, 0xb2, 0x84, 0xeb, 0x50, 0x3c, 0xd3, 0xb5, 0xb3, 0xba, 0x5e,
	0xef, 0xb5, 0x4f, 0xbb, 0xe5, 0x0c, 0xae, 0xc2, 0x4a, 0xbb, 0xdb, 0x3f, 0xee, 0xb4, 0x5b, 0xdf,
	0xf6, 0xca, 0x59, 0xef, 0xb5, 0xa9, 0x75, 0xda, 0xaf, 0x34, 0x5d, 0x6b, 0x96, 0x97, 0xb0, 0x04,
	0x05, 0x5d, 0x7b, 0xa9, 0x35, 0x7a, 0x5a, 0xb3, 0x9c, 0xf3, 0x0e, 0x1b, 0xf5, 0x6e, 0x43, 0xeb,
	0x74, 0xb4, 0x66, 0x39, 0x4f, 0x6a, 0x80, 0x0d, 0xde, 0x2a, 0xaf, 0x44, 0xa7, 0xbf, 0xcc, 0xa8,
	0xcb, 0xf0, 0x53, 0xc8, 0x39, 0xde, 0x3b, 0x17, 0xaa, 0x58, 0x5d, 0x8b, 0xd7, 0xab, 0x8b, 0x43,
	0xf2, 0x19, 0xac, 0xb7, 0x28, 0x8b, 0xfd, 0x31, 0x45, 0x60, 0xf2, 0x87, 0x04, 0x1b, 0x1d, 0xcb,
	0x15, 0x40, 0x37, 0x40, 0xd6, 0x60, 0x55, 0xb4, 0xdb, 0xbf, 0xb2, 0x6e, 0x98, 0x4f, 0xf5, 0xbf,
	0xd2, 0x94, 0x04, 0xf6, 0x98, 0x43, 0x71, 0x1b, 0x56, 0x26, 0xc6, 0x90, 0xf6, 0x5d, 0xeb, 0xad,
	0xb8, 0xb0, 0x9c, 0x5e, 0xf0, 0x02, 0xe7, 0xd6, 0x5b, 0x8a, 0x1f, 0x03, 0xf0, 0x43, 0xe6, 0x8c,
	0xa8, 0xed, 0xdf, 0x16, 0x87, 0xf7, 0xbc, 0x00, 0x31, 0x01, 0xa3, 0xc5, 0xb8, 0x13, 0xc7, 0x76,
	0x29, 0x3e, 0x85, 0x3c, 0xef, 0xc9, 0xad, 0x48, 0x7b, 0xd9, 0x94, 0x8e, 0xfd, 0x53, 0x7c, 0x0a,
	0xeb, 0x36, 0x7d, 0xc3, 0xfa, 0x11, 0x06, 0x61, 0x98, 0x55, 0x2f, 0x7c, 0x16, 0xb2, 0xfc, 0x0a,
	0x78, 0xc1, 0x0d, 0x72, 0x7f, 0x59, 0xf1, 0x79, 0xe8, 0x37, 0xcf, 0xc3, 0x3c, 0x7f, 0xb1, 0x2a,
	0x2b, 0xc2, 0xe6, 0x4a, 0x60, 0x73, 0xe5, 0xd8, 0xb3, 0xf9, 0x77, 0x86, 0x3b, 0x0a, 0xbc, 0xe8,
	0x3d, 0x93, 0xbf, 0x25, 0x28, 0x9d, 0x58, 0x6c, 0x70, 0x4d, 0xed, 0x87, 0xb4, 0xfc, 0x57, 0x09,
	0x47, 0xef, 0x84, 0xad, 0x44, 0xc9, 0x93, 0xc6, 0x7e, 0x71, 0x5f, 0x63, 0x97, 0xa0, 0x70, 0x56,
	0x6f, 0x9c, 0xd4, 0x5b, 0x5a, 0xb3, 0x9c, 0x25, 0xaf, 0x60, 0x4b, 0x78, 0x35, 0xca, 0x11, 0x68,
	0xfb, 0x35, 0x94, 0x46, 0x22, 0x1c, 0x95, 0x78, 0x33, 0xb5, 0x2e, 0x3d, 0x06, 0x25, 0x5f, 0xc0,
	0xe3, 0x16, 0x65, 0x69, 0x49, 0xd3, 0xec, 0xfc, 0x8f, 0x04, 0x85, 0xf3, 0x6b, 0x6b, 0x32, 0xa6,
	0x36, 0x7b, 0x20, 0x75, 0x9f, 0x25, 0xd4, 0xad, 0x84, 0x5d, 0x04, 0xc4, 0x49, 0x65, 0x5f, 0x7e,
	0x40, 0x59, 0x6f, 0xea, 0x4f, 0x3b, 0x1d, 0xb1, 0x04, 0x32, 0xf1, 0x0d, 0x91, 0x8d, 0x6d, 0x88,
	0x25, 0x72, 0x0c, 0x9b, 0x42, 0xe6, 0x80, 0x2c, 0x50, 0xe3, 0x10, 0x0a, 0xae, 0x1f, 0xf2, 0xe5,
	0xdd, 0x58, 0x28, 0x4c, 0x0f, 0x21, 0x64, 0x1f, 0xb0, 0x45, 0x59, 0x32, 0x49, 0x8a, 0x62, 0xd5,
	0xf7, 0x19, 0x28, 0x71, 0xdd, 0xcf, 0xe9, 0xf4, 0xd6, 0x1a, 0x50, 0xbc, 0x80, 0x62, 0x64, 0x2b,
	0xe1, 0x76, 0x48, 0xb3, 0xb8, 0xab, 0xe4, 0xc4, 0x14, 0x91, 0xad, 0xdf, 0xdf, 0xfd, 0xfb, 0x67,
	0xe6, 0x11, 0x01, 0xf5, 0xf6, 0x48, 0x15, 0x63, 0x5b, 0xf3, 0x27, 0xeb, 0x7b, 0x28, 0x04, 0x0b,
	0x0b, 0xe7, 0x9a, 0x26, 0x76, 0xd8, 0x42, 0xc2, 0x6d, 0x9e, 0x70, 0x13, 0x1f, 0x79, 0x09, 0x7f,
	0xf3, 0x0a, 0x7e, 0x21, 0xd2, 0xaa, 0x07, 0x77, 0xf8, 0x03, 0xc0, 0x7c, 0x9d, 0xa0, 0x1c, 0xfe,
	0x75, 0x61, 0xe1, 0xc9, 0xdb, 0xa9, 0x67, 0x62, 0xff, 0x10, 0xe4, 0x1c, 0x25, 0x8c, 0x14, 0x8d,
	0x26, 0x14, 0x23, 0x3b, 0x24, 0x22, 0xc2, 0xe2, 0x66, 0x59, 0xa8, 0x79, 0x9f, 0xe7, 0x23, 0xd5,
	0x2d, 0x5e, 0x33, 0x4f, 0xa8, 0xc4, 0x2b, 0xf7, 0x35, 0xa9, 0xbe, 0x97, 0x60, 0xcd, 0xb7, 0x7e,
	0xa0, 0xfe, 0x9b, 0xe0, 0x9b, 0x10, 0x5b, 0x24, 0x24, 0x71, 0x09, 0x29, 0xf3, 0x22, 0xa7, 0x8f,
	0x1b, 0xf9, 0x9c, 0x57, 0xf3, 0x09, 0xd9, 0xf0, 0xaa, 0x89, 0x8e, 0x9e, 0x5b, 0x8b, 0x4d, 0x22,
	0x8e, 0xf9, 0x17, 0x25, 0x46, 0xbb, 0x1b, 0xbd, 0xa7, 0x7b, 0x70, 0x12, 0xce, 0xb9, 0x83, 0xf2,
	0xfc, 0xd6, 0x62, 0xcc, 0xea, 0xc1, 0x5d, 0xf5, 0x9d, 0x04, 0xa5, 0xe6, 0xd4, 0xb1, 0x69, 0xd0,
	0xb9, 0x09, 0x6b, 0x71, 0xeb, 0xe3, 0x93, 0x44, 0xd7, 0x09, 0x3b, 0xcb, 0x8b, 0x13, 0x40, 0x76,
	0x39, 0xf3, 0x16, 0x59, 0xf5, 0x98, 0x83, 0x69, 0x70, 0x6b, 0xe1, 0x60, 0xe0, 0x4f, 0x50, 0x8c,
	0x0c, 0x46, 0xe4, 0x62, 0x17, 0xc7, 0x25, 0x2d, 0xff, 0x13, 0x9e, 0xbf, 0x82, 0x8f, 0xe7, 0x9d,
	0x85, 0x2c, 0xea, 0xc1, 0xdd, 0x37, 0xcf, 0x7e, 0x54, 0x86, 0x16, 0xbb, 0x9e, 0x5d, 0x2a, 0x03,
	0x67, 0xac, 0x9a, 0x16, 0x65, 0xa6, 0x33, 0x60, 0xce, 0x54, 0xbd, 0xa4, 0x87, 0x8c, 0xba, 0x4c,
	0x9d, 0x8c, 0x86, 0xaa, 0x97, 0x55, 0xbd, 0x3d, 0x7a, 0xee, 0xfd, 0x5e, 0xe6, 0xf9, 0x47, 0xe5,
	0xcb, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xfb, 0x20, 0x24, 0x6a, 0x7e, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OrderServiceClient is the client API for OrderService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OrderServiceClient interface {
	// CreateOrder creates a new order.
	CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*Order, error)
	// GetOrder gets the order.
	GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*Order, error)
	// ListOrders lists orders.
	ListOrders(ctx context.Context, in *ListOrdersRequest, opts ...grpc.CallOption) (*ListOrdersResponse, error)
	// UpdateOrder update the order resource.
	UpdateOrder(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*Order, error)
}

type orderServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewOrderServiceClient(cc grpc.ClientConnInterface) OrderServiceClient {
	return &orderServiceClient{cc}
}

func (c *orderServiceClient) CreateOrder(ctx context.Context, in *CreateOrderRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/food.v1.OrderService/CreateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) GetOrder(ctx context.Context, in *GetOrderRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/food.v1.OrderService/GetOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) ListOrders(ctx context.Context, in *ListOrdersRequest, opts ...grpc.CallOption) (*ListOrdersResponse, error) {
	out := new(ListOrdersResponse)
	err := c.cc.Invoke(ctx, "/food.v1.OrderService/ListOrders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderServiceClient) UpdateOrder(ctx context.Context, in *UpdateOrderRequest, opts ...grpc.CallOption) (*Order, error) {
	out := new(Order)
	err := c.cc.Invoke(ctx, "/food.v1.OrderService/UpdateOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OrderServiceServer is the server API for OrderService service.
type OrderServiceServer interface {
	// CreateOrder creates a new order.
	CreateOrder(context.Context, *CreateOrderRequest) (*Order, error)
	// GetOrder gets the order.
	GetOrder(context.Context, *GetOrderRequest) (*Order, error)
	// ListOrders lists orders.
	ListOrders(context.Context, *ListOrdersRequest) (*ListOrdersResponse, error)
	// UpdateOrder update the order resource.
	UpdateOrder(context.Context, *UpdateOrderRequest) (*Order, error)
}

// UnimplementedOrderServiceServer can be embedded to have forward compatible implementations.
type UnimplementedOrderServiceServer struct {
}

func (*UnimplementedOrderServiceServer) CreateOrder(ctx context.Context, req *CreateOrderRequest) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrder not implemented")
}
func (*UnimplementedOrderServiceServer) GetOrder(ctx context.Context, req *GetOrderRequest) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrder not implemented")
}
func (*UnimplementedOrderServiceServer) ListOrders(ctx context.Context, req *ListOrdersRequest) (*ListOrdersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOrders not implemented")
}
func (*UnimplementedOrderServiceServer) UpdateOrder(ctx context.Context, req *UpdateOrderRequest) (*Order, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrder not implemented")
}

func RegisterOrderServiceServer(s *grpc.Server, srv OrderServiceServer) {
	s.RegisterService(&_OrderService_serviceDesc, srv)
}

func _OrderService_CreateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).CreateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food.v1.OrderService/CreateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).CreateOrder(ctx, req.(*CreateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_GetOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).GetOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food.v1.OrderService/GetOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).GetOrder(ctx, req.(*GetOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_ListOrders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListOrdersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).ListOrders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food.v1.OrderService/ListOrders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).ListOrders(ctx, req.(*ListOrdersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _OrderService_UpdateOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OrderServiceServer).UpdateOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food.v1.OrderService/UpdateOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OrderServiceServer).UpdateOrder(ctx, req.(*UpdateOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _OrderService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "food.v1.OrderService",
	HandlerType: (*OrderServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateOrder",
			Handler:    _OrderService_CreateOrder_Handler,
		},
		{
			MethodName: "GetOrder",
			Handler:    _OrderService_GetOrder_Handler,
		},
		{
			MethodName: "ListOrders",
			Handler:    _OrderService_ListOrders_Handler,
		},
		{
			MethodName: "UpdateOrder",
			Handler:    _OrderService_UpdateOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "food.proto",
}

// KitchenServiceClient is the client API for KitchenService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KitchenServiceClient interface {
	// CreateKitchenOrder creates a new kitchen order.
	CreateKitchenOrder(ctx context.Context, in *CreateKitchenOrderRequest, opts ...grpc.CallOption) (*KitchenOrder, error)
	// GetKitchenOrder gets the kitchen order.
	GetKitchenOrder(ctx context.Context, in *GetKitchenOrderRequest, opts ...grpc.CallOption) (*KitchenOrder, error)
}

type kitchenServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewKitchenServiceClient(cc grpc.ClientConnInterface) KitchenServiceClient {
	return &kitchenServiceClient{cc}
}

func (c *kitchenServiceClient) CreateKitchenOrder(ctx context.Context, in *CreateKitchenOrderRequest, opts ...grpc.CallOption) (*KitchenOrder, error) {
	out := new(KitchenOrder)
	err := c.cc.Invoke(ctx, "/food.v1.KitchenService/CreateKitchenOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kitchenServiceClient) GetKitchenOrder(ctx context.Context, in *GetKitchenOrderRequest, opts ...grpc.CallOption) (*KitchenOrder, error) {
	out := new(KitchenOrder)
	err := c.cc.Invoke(ctx, "/food.v1.KitchenService/GetKitchenOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KitchenServiceServer is the server API for KitchenService service.
type KitchenServiceServer interface {
	// CreateKitchenOrder creates a new kitchen order.
	CreateKitchenOrder(context.Context, *CreateKitchenOrderRequest) (*KitchenOrder, error)
	// GetKitchenOrder gets the kitchen order.
	GetKitchenOrder(context.Context, *GetKitchenOrderRequest) (*KitchenOrder, error)
}

// UnimplementedKitchenServiceServer can be embedded to have forward compatible implementations.
type UnimplementedKitchenServiceServer struct {
}

func (*UnimplementedKitchenServiceServer) CreateKitchenOrder(ctx context.Context, req *CreateKitchenOrderRequest) (*KitchenOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateKitchenOrder not implemented")
}
func (*UnimplementedKitchenServiceServer) GetKitchenOrder(ctx context.Context, req *GetKitchenOrderRequest) (*KitchenOrder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetKitchenOrder not implemented")
}

func RegisterKitchenServiceServer(s *grpc.Server, srv KitchenServiceServer) {
	s.RegisterService(&_KitchenService_serviceDesc, srv)
}

func _KitchenService_CreateKitchenOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateKitchenOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KitchenServiceServer).CreateKitchenOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food.v1.KitchenService/CreateKitchenOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KitchenServiceServer).CreateKitchenOrder(ctx, req.(*CreateKitchenOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KitchenService_GetKitchenOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetKitchenOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KitchenServiceServer).GetKitchenOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food.v1.KitchenService/GetKitchenOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KitchenServiceServer).GetKitchenOrder(ctx, req.(*GetKitchenOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _KitchenService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "food.v1.KitchenService",
	HandlerType: (*KitchenServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateKitchenOrder",
			Handler:    _KitchenService_CreateKitchenOrder_Handler,
		},
		{
			MethodName: "GetKitchenOrder",
			Handler:    _KitchenService_GetKitchenOrder_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "food.proto",
}

// DroneServiceClient is the client API for DroneService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DroneServiceClient interface {
	// CreateShipment creates a new shipment request.
	CreateShipment(ctx context.Context, in *CreateShipmentRequest, opts ...grpc.CallOption) (*Shipment, error)
	// GetShipment gets the drone delivery shipment.
	GetShipment(ctx context.Context, in *GetShipmentRequest, opts ...grpc.CallOption) (*Shipment, error)
}

type droneServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDroneServiceClient(cc grpc.ClientConnInterface) DroneServiceClient {
	return &droneServiceClient{cc}
}

func (c *droneServiceClient) CreateShipment(ctx context.Context, in *CreateShipmentRequest, opts ...grpc.CallOption) (*Shipment, error) {
	out := new(Shipment)
	err := c.cc.Invoke(ctx, "/food.v1.DroneService/CreateShipment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *droneServiceClient) GetShipment(ctx context.Context, in *GetShipmentRequest, opts ...grpc.CallOption) (*Shipment, error) {
	out := new(Shipment)
	err := c.cc.Invoke(ctx, "/food.v1.DroneService/GetShipment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DroneServiceServer is the server API for DroneService service.
type DroneServiceServer interface {
	// CreateShipment creates a new shipment request.
	CreateShipment(context.Context, *CreateShipmentRequest) (*Shipment, error)
	// GetShipment gets the drone delivery shipment.
	GetShipment(context.Context, *GetShipmentRequest) (*Shipment, error)
}

// UnimplementedDroneServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDroneServiceServer struct {
}

func (*UnimplementedDroneServiceServer) CreateShipment(ctx context.Context, req *CreateShipmentRequest) (*Shipment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateShipment not implemented")
}
func (*UnimplementedDroneServiceServer) GetShipment(ctx context.Context, req *GetShipmentRequest) (*Shipment, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetShipment not implemented")
}

func RegisterDroneServiceServer(s *grpc.Server, srv DroneServiceServer) {
	s.RegisterService(&_DroneService_serviceDesc, srv)
}

func _DroneService_CreateShipment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateShipmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DroneServiceServer).CreateShipment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food.v1.DroneService/CreateShipment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DroneServiceServer).CreateShipment(ctx, req.(*CreateShipmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DroneService_GetShipment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetShipmentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DroneServiceServer).GetShipment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/food.v1.DroneService/GetShipment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DroneServiceServer).GetShipment(ctx, req.(*GetShipmentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DroneService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "food.v1.DroneService",
	HandlerType: (*DroneServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateShipment",
			Handler:    _DroneService_CreateShipment_Handler,
		},
		{
			MethodName: "GetShipment",
			Handler:    _DroneService_GetShipment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "food.proto",
}
